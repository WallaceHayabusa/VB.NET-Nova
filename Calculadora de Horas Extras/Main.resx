<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="imgLogoNovaTendencia.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>